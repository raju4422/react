{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\react\\\\react\\\\src\\\\components\\\\ReducerFunction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // Defining the initial state and the reducer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\nconst reducer123 = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return state + 1;\n\n    case \"subtract\":\n      return state - 1;\n\n    case \"reset\":\n      return 0;\n\n    default:\n      throw new Error(\"Unexpected action\");\n  }\n};\n\nconst ReducerFunction = () => {\n  _s();\n\n  // Initialising useReducer hook\n  const [count, dispatchq] = useReducer(reducer123, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatchq({\n        type: 'add'\n      }),\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatchq({\n        type: 'subtract'\n      }),\n      children: \"subtract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatchq({\n        type: 'reset'\n      }),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReducerFunction, \"3woYj6kJo/C7FbB4SPfyqdpDPLI=\");\n\n_c = ReducerFunction;\nexport default ReducerFunction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerFunction\");","map":{"version":3,"sources":["D:/xampp/htdocs/react/react/src/components/ReducerFunction.js"],"names":["React","useReducer","initialState","reducer123","state","action","type","Error","ReducerFunction","count","dispatchq"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;;;AACA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACA,aAAOF,KAAK,GAAG,CAAf;;AACA,SAAK,UAAL;AACA,aAAOA,KAAK,GAAG,CAAf;;AACA,SAAK,OAAL;AACA,aAAO,CAAP;;AACA;AACA,YAAM,IAAIG,KAAJ,CAAU,mBAAV,CAAN;AARJ;AAUC,CAXD;;AAaA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B;AACJ,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBT,UAAU,CAACE,UAAD,EAAaD,YAAb,CAArC;AACA,sBACI;AAAA,4BACA;AAAA,gBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMC,SAAS,CAAC;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAQ,MAAA,OAAO,EAAE,MAAMI,SAAS,CAAC;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAQ,MAAA,OAAO,EAAE,MAAMI,SAAS,CAAC;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcC,CAjBD;;GAAME,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\n// Defining the initial state and the reducer\r\nconst initialState = 0;\r\nconst reducer123 = (state, action) => {\r\nswitch (action.type) {\r\n    case \"add\":\r\n    return state + 1;\r\n    case \"subtract\":\r\n    return state - 1;\r\n    case \"reset\":\r\n    return 0;\r\n    default:\r\n    throw new Error(\"Unexpected action\");\r\n}\r\n};\r\n\r\nconst ReducerFunction = () => {\r\n    // Initialising useReducer hook\r\nconst [count, dispatchq] = useReducer(reducer123, initialState);\r\nreturn (\r\n    <div>\r\n    <h2>{count}</h2>\r\n    <button onClick={() => dispatchq({type:'add'})}>\r\n        add\r\n    </button>\r\n    <button onClick={() => dispatchq({type:'subtract'})}>\r\n        subtract\r\n    </button>\r\n    <button onClick={() => dispatchq({type:'reset'})}>\r\n        reset\r\n    </button>\r\n    </div>\r\n);\r\n};\r\n\r\n\r\nexport default ReducerFunction;"]},"metadata":{},"sourceType":"module"}